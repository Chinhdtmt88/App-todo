{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\NodeJs\\\\CovertExcel\\\\my-todo-app\\\\src\\\\components\\\\TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Todos from \"./Todos\";\nimport Header from \"../components/layout/Header\";\nimport AddTodo from \"./AddTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoApp() {\n  _s();\n\n  const [state, setState] = useState({\n    todos: []\n  });\n\n  const handleCheckboxChange = id => {\n    setState({\n      todos: state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      })\n    });\n  };\n\n  const deleteTodo = id => {\n    axios.delete(`http://jsonplaceholer.typicode.com/todos/${id}`).then(response => this.setState({\n      todos: [...this.state.todos.filter(todo => {\n        return todo.id !== id;\n      })]\n    }));\n  };\n\n  const addTodo = title => {\n    const todoData = {\n      title: title,\n      completed: false\n    };\n    axios.post(\"http://jsonplaceholder.typicode.com/todos\", todoData).then(response => {\n      console.log(response.data);\n      this.setState({\n        todos: [...this.state.todos, response.data]\n      });\n    });\n  };\n\n  useEffect(() => {\n    //tao GET request de lay danh sach todos\n    const config = {\n      params: {\n        _limit: 5\n      }\n    };\n    axios.get(\"http://jsonplaceholder.typicode.com/todos\", config).then(response => this.setState({\n      todos: response.data\n    }));\n  }, []); // render(){\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      todos: state.todos,\n      handleChange: handleCheckboxChange,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this); //}\n  // state ={\n  //     todos :[\n  //         {\n  //             id: 1,\n  //             title: \"Setup development environment\",\n  //             completed: true\n  //         },\n  //         {\n  //             id: 2,\n  //             title: \"Develop website and add content\",\n  //             completed: false\n  //         },\n  //         {\n  //             id:3,\n  //             title:\"Deploy to live server\",\n  //             completed: false\n  //         }\n  //     ]\n  // };\n}\n\n_s(TodoApp, \"o6c9aR/5UVtE0rABa7WENnK/fE8=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/NodeJs/CovertExcel/my-todo-app/src/components/TodoApp.js"],"names":["React","useState","useEffect","axios","Todos","Header","AddTodo","TodoApp","state","setState","todos","handleCheckboxChange","id","map","todo","completed","deleteTodo","delete","then","response","filter","addTodo","title","todoData","post","console","log","data","config","params","_limit","get"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Todos from \"./Todos\"\r\nimport Header from \"../components/layout/Header\";\r\nimport AddTodo from \"./AddTodo\"\r\n\r\nfunction TodoApp(){\r\n    const [state, setState] = useState({\r\n        todos: []\r\n    });\r\n\r\n    const handleCheckboxChange = id =>{\r\n        setState({\r\n            todos: state.todos.map(todo =>{\r\n                if (todo.id === id){\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        });\r\n        \r\n    };\r\n    const deleteTodo = id =>{\r\n        axios.delete(`http://jsonplaceholer.typicode.com/todos/${id}`)\r\n            .then(response => this.setState({\r\n                todos:[\r\n                    ...this.state.todos.filter(todo =>{\r\n                        return todo.id !== id;\r\n                    })\r\n                ]\r\n            }))\r\n        \r\n    };\r\n    const addTodo = title =>{\r\n        const todoData = {\r\n            \r\n            title: title,\r\n            completed: false\r\n        }\r\n        axios.post(\"http://jsonplaceholder.typicode.com/todos\", todoData)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    todos: [...this.state.todos, response.data]\r\n                })\r\n            });\r\n    };\r\n    useEffect(() =>{\r\n        //tao GET request de lay danh sach todos\r\n        const config ={\r\n            params: {\r\n                _limit: 5\r\n            }\r\n        }\r\n        axios.get(\"http://jsonplaceholder.typicode.com/todos\", config )\r\n            .then(response => this.setState({todos: response.data}));\r\n    }, []);\r\n    // render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Header/>\r\n                <AddTodo addTodo={addTodo}/>\r\n                <Todos \r\n                todos={state.todos} \r\n                handleChange={handleCheckboxChange}\r\n                deleteTodo={deleteTodo}\r\n                />\r\n                    \r\n\r\n            </div>\r\n        );\r\n    //}\r\n    \r\n    \r\n\r\n\r\n    // state ={\r\n    //     todos :[\r\n    //         {\r\n    //             id: 1,\r\n    //             title: \"Setup development environment\",\r\n    //             completed: true\r\n    //         },\r\n    //         {\r\n    //             id: 2,\r\n    //             title: \"Develop website and add content\",\r\n    //             completed: false\r\n    //         },\r\n    //         {\r\n    //             id:3,\r\n    //             title:\"Deploy to live server\",\r\n    //             completed: false\r\n    //         }\r\n    //     ]\r\n    // };\r\n}\r\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}